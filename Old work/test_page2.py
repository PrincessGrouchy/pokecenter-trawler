# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestPage2():
  def setup_method(self, method):
    self.driver = webdriver.Firefox()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_page2(self):
    # Test name: Page 2
    # Step # | name | target | value
    self.vars["page_count"] = self.driver.execute_script("return 2")
    while self.driver.execute_script("return (arguments[0] < 50)", self.vars["page_count"]):
      self.driver.get("https://www.pokemoncenter.com/en-ca/category/plush?sort=launch_date%2Bdesc&page=self.vars["page_count"]")
      attribute = self.driver.find_element(By.XPATH, "//main[@id=\'main\']/div[2]/div[2]/div[2]/div[4]/div/div/a").get_attribute("href")
      self.vars["link"] = attribute
      self.vars["name"] = self.driver.find_element(By.XPATH, "//main[@id=\'main\']/div[2]/div[2]/div[2]/div[4]/div/div/a/div[2]/h3").text
      self.vars["price"] = self.driver.find_element(By.XPATH, "//main[@id=\'main\']/div[2]/div[2]/div[2]/div[4]/div/div/a/div[2]/div/span").text
      self.vars["stock"] = self.driver.find_element(By.XPATH, "//main[@id=\'main\']/div[2]/div[2]/div[2]/div[4]/div/div/a/div/div").text
      print("Output - {}-1 Link: https://www.pokemoncenter.com${link}".format(self.vars["page_count"]))
      print("Output - {}-1 Name:  ${name}".format(self.vars["page_count"]))
      print("Output - {}-1 Price: ${price}".format(self.vars["page_count"]))
      print("Output - {}-1 OoStock?: ${stock}".format(self.vars["page_count"]))
      self.vars["loop_count"] = self.driver.execute_script("return 2")
      while self.driver.execute_script("return (arguments[0] < 31)", self.vars["loop_count"]):
        attribute = self.driver.find_element(By.XPATH, "//main[@id=\'main\']/div[2]/div[2]/div[2]/div[4]/div[self.vars["loop_count"]]/div/a").get_attribute("href")
        self.vars["link"] = attribute
        self.vars["name"] = self.driver.find_element(By.XPATH, "//main[@id=\'main\']/div[2]/div[2]/div[2]/div[4]/div[self.vars["loop_count"]]/div/a/div[2]/h3").text
        self.vars["price"] = self.driver.find_element(By.XPATH, "//main[@id=\'main\']/div[2]/div[2]/div[2]/div[4]/div[self.vars["loop_count"]]/div/a/div[2]/div/span").text
        self.vars["stock"] = self.driver.find_element(By.XPATH, "//main[@id=\'main\']/div[2]/div[2]/div[2]/div[4]/div[self.vars["loop_count"]]/div/a/div/div").text
        print("Output - {}-${loop_count} Link: https://www.pokemoncenter.com${link}".format(self.vars["page_count"]))
        print("Output - {}-${loop_count} Name:  ${name}".format(self.vars["page_count"]))
        print("Output - {}-${loop_count} Price: ${price}".format(self.vars["page_count"]))
        print("Output - {}-${loop_count} OoStock?: ${stock}".format(self.vars["page_count"]))
        self.vars["loop_count"] = self.driver.execute_script("return arguments[0] + 1", self.vars["loop_count"])
      self.vars["page_count"] = self.driver.execute_script("return arguments[0] + 1", self.vars["page_count"])
  
